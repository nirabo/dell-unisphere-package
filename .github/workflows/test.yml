name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          # Try to use uv if available, otherwise fall back to pip
          if command -v uv &> /dev/null; then
            # Create a virtual environment first
            uv venv
            # Activate the virtual environment
            source .venv/bin/activate
            # Install dependencies
            uv pip install -e .
          else
            pip install -e .
          fi

      - name: Run tests
        run: |
          # If using uv, activate the virtual environment first
          if command -v uv &> /dev/null && [ -d ".venv" ]; then
            source .venv/bin/activate
          fi
          make test

      - name: Generate coverage report
        run: |
          # If using uv, activate the virtual environment first
          if command -v uv &> /dev/null && [ -d ".venv" ]; then
            source .venv/bin/activate
            # Use python -m pytest for proper module resolution as per our testing strategy
            python -m pytest tests --cov=src --cov-report=xml:coverage.xml --cov-report=term
          else
            # Fall back to direct uv run if no venv is found
            uv run python -m pytest tests --cov=src --cov-report=xml:coverage.xml --cov-report=term
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Generate test report
        run: |
          # If using uv, activate the virtual environment first
          if command -v uv &> /dev/null && [ -d ".venv" ]; then
            source .venv/bin/activate
          fi
          mkdir -p tests/scripts/test_results
          bash tests/scripts/api_tests.sh

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: tests/scripts/test_results/test_report.md
